#!/usr/bin/python
# -*- coding: utf-8 -*-

# Copyright 2010, 2011 Andrew De Quincey -  adq@lidskialf.net
# This file is part of rEdBus.
#
#  rEdBus is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  rEdBus is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with rEdBus.  If not, see <http://www.gnu.org/licenses/>.

import sys
import os
import datetime
import psycopg2
import time
import xml.sax
from NaptanSaxDocumentHandler import NaptanSaxDocumentHandler

if len(sys.argv) != 3:
    print("Syntax: getnaptandata <xml file> <nowdate>", file=sys.stderr)
    sys.exit(1)
xmlfile = sys.argv[1]
nowdate = sys.argv[2]

# Parse the XML stop information
stops = {}
handler = NaptanSaxDocumentHandler(stops)
xml.sax.parse(xmlfile, handler)

# Connect to database
db = psycopg2.connect("host=beyond dbname=redbus user=redbus password=password")
dbcur = db.cursor()

# Add/update stops in the database
for stop in stops.values():
    dbcur.execute("UPDATE stops SET facing=%(facing)s, source=source || ' NAPTAN' " +
                  "WHERE stop_code = %(stop_code)s AND created_date=%(date)s",
                  { 'facing': stop['Facing'],
                    'stop_code': stop['StopCode'],
                    'date': nowdate })

    if dbcur.statusmessage == 'UPDATE 1':
        dbcur.execute("UPDATE stops SET stop_name = %(stop_name)s " +
                    "WHERE stop_code = %(stop_code)s AND created_date=%(date)s AND %(stop_name)s LIKE stop_name || '%'",
                    { 'stop_name': stop['StopName'],
                        'stop_code': stop['StopCode'],
                        'date': nowdate })
    else:
        dbcur.execute("INSERT INTO stops (stop_code, stop_name, x, y, facing, stop_type, source, created_date) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)",
                      (stop['StopCode'], stop['StopName'], stop['X'], stop['Y'], stop['Facing'], stop['StopType'], 'NAPTAN', nowdate))
db.commit()

# DONE
dbcur.close()
db.close()
